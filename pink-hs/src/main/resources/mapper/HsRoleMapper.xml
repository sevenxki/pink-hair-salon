<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.scau.misp.hs.mapper.HsRoleMapper">

    <resultMap id="BaseResultMap" type="edu.scau.misp.hs.entity.HsRole">
        <!--@Table hs_role-->
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleNo" column="role_no" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifiedTime" column="modified_time" jdbcType="TIMESTAMP"/>
        <result property="roleStatus" column="role_status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryByIdAndAva" resultMap="BaseResultMap">
        select
            role_id, role_name, role_no, remark, create_time, modified_time, role_status
        from hs_role
        where role_id = #{roleId} AND role_status = 1
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          role_id, role_name, role_no, remark, create_time, modified_time, role_status
        from hs_role
        where role_id = #{roleId}
    </select>

    <!--查询单个-->
    <select id="queryByName" resultMap="BaseResultMap">
        select
            role_id, role_name, role_no, remark, create_time, modified_time, role_status
        from hs_role
        where role_name = #{roleName}
    </select>
<!--    &lt;!&ndash;查询指定行数据&ndash;&gt;-->
<!--    <select id="queryAllByLimit" resultMap="BaseResultMap">-->
<!--        select-->
<!--          role_id, role_name, role_no, remark, create_time, modified_time, role_status-->
<!--        from hs_role-->
<!--    </select>-->

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          role_id, role_name, role_no, remark, create_time, modified_time, role_status
        from hs_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleNo != null">
                and role_no = #{roleNo}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifiedTime != null">
                and modified_time = #{modifiedTime}
            </if>
            <if test="roleStatus != null">
                and role_status = #{roleStatus}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleId" useGeneratedKeys="true">
        insert into hs_role(role_name, role_no, remark, create_time, modified_time, role_status)
        values (#{roleName}, #{roleNo}, #{remark}, #{createTime}, #{modifiedTime}, #{roleStatus})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hs_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleNo != null">
                role_no = #{roleNo},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifiedTime != null">
                modified_time = #{modifiedTime},
            </if>
            <if test="roleStatus != null">
                role_status = #{roleStatus},
            </if>
        </set>
        where role_id = #{roleId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from hs_role where role_id = #{roleId}
    </delete>

</mapper>